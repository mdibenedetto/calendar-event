{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/calendar-event/calendar-event.component.ts","webpack:///src/app/core/components/calendar-event/calendar-event.component.html","webpack:///src/app/core/shared/date-helpers.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","monthNames","selectedMonth","Date","getMonth","selectedYear","getFullYear","dummyEvents","createDummyEvents","year","month","i","day","date","push","description","currentTarget","selectedIndex","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CalendarEventComponent","calendarDays","weekDays","changes","setCalendar","MONDAY","daysInMonth","monthIndex","firstDayWeek","daysInPrevMont","startPrevMonth","value","isPrevMonth","dayIndex","event","attachEvent","calendarToday","find","d","isToday","makeStringDate","getDay","strDateCalendar","events","strDateEvent","currentYear","getDaysInMonth","getDate","getFirstDayOfWeek","today","dt","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AACF;;;;;;;AAF4D;;AAC1D;;AAAA;;;;QDKOC,Y;AALb;AAAA;;AAQE,aAAAC,KAAA,GAAQ,kBAAR;AACA,aAAAC,UAAA,GAAa,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACX,MADW,EACH,QADG,EACO,WADP,EACoB,SADpB,EAC+B,UAD/B,EAC2C,UAD3C,CAAb;AAEA,aAAAC,aAAA,GAAgB,IAAIC,IAAJ,GAAWC,QAAX,KAAwB,CAAxC;AACA,aAAAC,YAAA,GAAe,IAAIF,IAAJ,GAAWG,WAAX,EAAf;AACA,aAAAC,WAAA,GAA+B,EAA/B;AAyBD;;;;eAvBC,oBAAQ;AACN,eAAKC,iBAAL;AACD;;;eAEO,6BAAiB;AACvB,cAAMC,IAAI,GAAG,IAAb;AACA,cAAMC,KAAK,GAAG,IAAIP,IAAJ,GAAWC,QAAX,EAAd;;AAEA,eAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC9B,gBAAMC,GAAG,GAAGD,CAAZ;AACA,gBAAME,IAAI,GAAG,IAAIV,IAAJ,CAASM,IAAT,EAAeC,KAAf,EAAsBE,GAAtB,CAAb;AAEA,iBAAKL,WAAL,CAAiBO,IAAjB,CAAsB;AACpBD,kBAAI,EAAJA,IADoB;AAEpBE,yBAAW,EAAE,WAAWJ;AAFJ,aAAtB;AAKD;AACF;;;eAEM,uBAAcnB,CAAd,EAAuD;AAC5D,eAAKU,aAAL,GAAqBV,CAAC,CAACwB,aAAF,CAAgBC,aAArC;AACD;;;;;;;uBAhCUlB,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,iN;AAAA;AAAA;ACRzB;;AACE;;AAAkC;AAAA;AAAA;;AAChC;;AAGF;;AACA;;AAAmB;;AAAkB;;AACvC;;AAEA;;AACA;;;;AAToC;;AAAA;;AACxB;;AAAA;;AAIS;;AAAA;;AAKnB;;AAAA,6FAAqB,YAArB,EAAqB,iBAArB,EAAqB,QAArB,EAAqB,eAArB;;;;;;;;;sEDHWA,Y,EAAY;cALxB,uDAKwB;eALd;AACTmB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,0DAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBAVlB,2DAUkB,EATlB,+GASkB;AATI,kBAGtB,uEAHsB,EAItB,0DAJsB;AASJ,O;AALP,K;;;;;sEAKFA,S,EAAS;cAZrB,sDAYqB;eAZZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,+GAFY,CADN;AAKRC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,CALD;AASRC,mBAAS,EAAE,EATH;AAURC,mBAAS,EAAE,CAAC,2DAAD;AAVH,S;AAYY,Q;;;;;;;;;;;;;;;;;;ACnBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AACG;;AACH;;;;;;AADG;;AAAA;;;;;;;;;;;;;;AAEH;;AASG;;AACH;;;;;;AAFE;;AANA;;AAOC;;AAAA;;;;QDJQC,sB;AALb;AAAA;;AAWW,aAAAC,YAAA,GAA8B,EAA9B;AACA,aAAAC,QAAA,GAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAX;AA2DV;;;;eAzDG,qBAAYC,OAAZ,EAAkC;AAC9B,eAAKC,WAAL;AACH;;;eAEO,uBAAW;AAAA;;AACf,eAAKH,YAAL,GAAoB,EAApB;AAEA,cAAMI,MAAM,GAAG,CAAf;AACA,cAAMC,WAAW,GAAG,4EAAe;AAAEtB,iBAAK,EAAE,KAAKuB;AAAd,WAAf,CAApB;AACA,cAAMC,YAAY,GAAG,+EAAkB;AAAExB,iBAAK,EAAE,KAAKuB;AAAd,WAAlB,CAArB,CALe,CAOf;;AACA,cAAIC,YAAY,GAAGH,MAAnB,EAA2B;AACvB;AACA,gBAAMI,cAAc,GAAG,4EAAe;AAAEzB,mBAAK,EAAE,KAAKuB,UAAL,GAAkB;AAA3B,aAAf,CAAvB;AACA,gBAAMG,cAAc,GAAGD,cAAc,IAAID,YAAY,GAAG,CAAnB,CAArC;;AAEA,iBAAK,IAAIG,KAAK,GAAGD,cAAjB,EAAiCC,KAAK,IAAIF,cAA1C,EAA0DE,KAAK,EAA/D,EAAmE;AAC/D,mBAAKV,YAAL,CAAkBb,IAAlB,CAAuB;AACnBuB,qBAAK,EAAEA,KADY;AAEnBC,2BAAW,EAAE;AAFM,eAAvB;AAIH;AACJ,WAnBc,CAqBf;;;AACA,eAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,IAAIP,WAAnC,EAAgDO,QAAQ,EAAxD,EAA4D;AAExD,gBAAM3B,GAAG,GAAgB;AACrByB,mBAAK,EAAEE,QADc;AAErBC,mBAAK,EAAE,KAAKC,WAAL,CAAiBF,QAAjB;AAFc,aAAzB;AAKA,iBAAKZ,YAAL,CAAkBb,IAAlB,CAAuBF,GAAvB;AACH,WA9Bc,CA+Bf;;;AACA,cAAM8B,aAAa,GAAG,KAAKf,YAAL,CAAkBgB,IAAlB,CAAuB,UAAAC,CAAC;AAAA,mBAAI,qEAAQ;AACtDhC,iBAAG,EAAEgC,CAAC,CAACP,KAD+C;AAEtD3B,mBAAK,EAAE,KAAI,CAACuB,UAF0C;AAGtDxB,kBAAI,EAAE,KAAI,CAACA;AAH2C,aAAR,CAAJ;AAAA,WAAxB,CAAtB;AAMAiC,uBAAa,KAAKA,aAAa,CAACG,OAAd,GAAwB,IAA7B,CAAb;AACH;;;eAEO,qBAAYN,QAAZ,EAA4B;AAChC,cAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACF,CAAD;AAAA,6BAAgBA,CAAC,CAACtC,WAAF,EAAhB,cAAmCsC,CAAC,CAACxC,QAAF,EAAnC,cAAmDwC,CAAC,CAACG,MAAF,EAAnD;AAAA,WAAvB;;AACA,cAAMC,eAAe,GAAGF,cAAc,CAAC,IAAI3C,IAAJ,CAAS,IAAT,EAAe,KAAK8B,UAApB,EAAgCM,QAAhC,CAAD,CAAtC;AAEA,cAAMC,KAAK,GAAG,KAAKS,MAAL,CAAYN,IAAZ,CAAiB,UAAAnD,CAAC,EAAI;AAChC,gBAAM0D,YAAY,GAAGJ,cAAc,CAACtD,CAAC,CAACqB,IAAH,CAAnC;AACA,mBAAOqC,YAAY,KAAKF,eAAxB;AACH,WAHa,CAAd;AAKA,iBAAOR,KAAP;AACH;;;;;;;uBAhEQd,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,qC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,c;AAAA,a;AAAA,gN;AAAA;AAAA;ACTnC;;AACE;;AAGA;;AAWF;;AAEA;;AACA;;AAAI;;AAAW;;AACf;;AACE;;;;AACF;;;;AApB+B;;AAAA;;AAU3B;;AAAA;;AASF;;AAAA;;;;;;;;;;sEDXWA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACPR,kBAAQ,EAAE,gBADH;AAEPC,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD;AAHJ,S;AAKwB,Q;;gBAE9B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAM+B,WAAW,GAAG,IAAIhD,IAAJ,GAAWG,WAAX,EAApB;;AAQO,aAAS8C,cAAT,OAA+D;AAAA,2BAArC3C,IAAqC;AAAA,UAArCA,IAAqC,0BAA9B0C,WAA8B;AAAA,UAAjBzC,KAAiB,QAAjBA,KAAiB;AAClE,aAAO,IAAIP,IAAJ,CAAS,CAACM,IAAV,EAAgB,CAACC,KAAD,GAAS,CAAzB,EAA4B,CAA5B,EAA+B2C,OAA/B,EAAP;AACH;;AAEM,aAASC,iBAAT,QAAkE;AAAA,6BAArC7C,IAAqC;AAAA,UAArCA,IAAqC,2BAA9B0C,WAA8B;AAAA,UAAjBzC,KAAiB,SAAjBA,KAAiB;AACrE,aAAO,IAAIP,IAAJ,CAAS,CAACM,IAAV,EAAgB,CAACC,KAAjB,EAAwB,CAAxB,EAA2BqC,MAA3B,EAAP;AACH;;AAEM,aAASF,OAAT,QAA6D;AAAA,6BAA1CpC,IAA0C;AAAA,UAA1CA,IAA0C,2BAAnC0C,WAAmC;AAAA,UAAtBzC,KAAsB,SAAtBA,KAAsB;AAAA,UAAfE,GAAe,SAAfA,GAAe;AAChE,UAAM2C,KAAK,GAAG,IAAIpD,IAAJ,EAAd;AACA,UAAMqD,EAAE,GAAG,IAAIrD,IAAJ,CAAS,CAACM,IAAV,EAAgB,CAACC,KAAjB,EAAwB,CAACE,GAAzB,CAAX;AAEA,aAAO4C,EAAE,CAACH,OAAH,OAAiBE,KAAK,CAACF,OAAN,EAAjB,IACAG,EAAE,CAACpD,QAAH,OAAkBmD,KAAK,CAACnD,QAAN,EADlB,IAEAoD,EAAE,CAAClD,WAAH,OAAqBiD,KAAK,CAACjD,WAAN,EAF5B;AAIH;;;;;;;;;;;;;;;;;ACxBD;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CalendarEvent } from './core/model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n\n  title = 'calendar-manager';\n  monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  selectedMonth = new Date().getMonth() + 1;\n  selectedYear = new Date().getFullYear();\n  dummyEvents: CalendarEvent[] = [];\n\n  ngOnInit(): void {\n    this.createDummyEvents();\n  }\n\n  private createDummyEvents(): void {\n    const year = 2021;\n    const month = new Date().getMonth();\n\n    for (let i = 0; i < 30; i += 8) {\n      const day = i;\n      const date = new Date(year, month, day);\n\n      this.dummyEvents.push({\n        date,\n        description: \"Event \" + i\n      });\n\n    }\n  }\n\n  public onMonthChange(e: { currentTarget: HTMLSelectElement }) {\n    this.selectedMonth = e.currentTarget.selectedIndex;\n  }\n}\n\n","<div class=\"date-container\">\n  <select #selMonth name=\"selMonth\" [(ngModel)]=\"selectedMonth\">\n    <option *ngFor=\"let month of monthNames; let index = index\" [value]=\"index\">\n      {{ month }}\n    </option>\n  </select>\n  <span class=\"year\">{{ selectedYear }}</span>\n</div>\n\n<br />\n<calendar-event\n  [year]=\"selectedYear\"\n  [monthIndex]=\"selectedMonth\"\n  [events]=\"dummyEvents\"\n></calendar-event>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CalendarEventComponent } from './core/components/calendar-event/calendar-event.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalendarEventComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CalendarDay, CalendarEvent } from '../../model';\nimport { getDaysInMonth, getFirstDayOfWeek, isToday } from '../../shared/date-helpers';\n\n@Component({\n    selector: 'calendar-event',\n    templateUrl: 'calendar-event.component.html',\n    styleUrls: ['calendar-event.component.scss'],\n})\nexport class CalendarEventComponent implements OnChanges {\n\n    @Input() year: number;\n    @Input() monthIndex: number;\n    @Input() events: CalendarEvent[];\n\n    public calendarDays: CalendarDay[] = [];\n    public weekDays = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.setCalendar();\n    }\n\n    private setCalendar(): void {\n        this.calendarDays = [];\n\n        const MONDAY = 1;\n        const daysInMonth = getDaysInMonth({ month: this.monthIndex });\n        const firstDayWeek = getFirstDayOfWeek({ month: this.monthIndex });\n\n        // build the previous month left days\n        if (firstDayWeek > MONDAY) {\n            debugger\n            const daysInPrevMont = getDaysInMonth({ month: this.monthIndex - 1 });\n            const startPrevMonth = daysInPrevMont - (firstDayWeek - 2);\n\n            for (let value = startPrevMonth; value <= daysInPrevMont; value++) {\n                this.calendarDays.push({\n                    value: value,\n                    isPrevMonth: true,\n                });\n            }\n        }\n\n        // build the current month\n        for (let dayIndex = 1; dayIndex <= daysInMonth; dayIndex++) {\n\n            const day: CalendarDay = {\n                value: dayIndex,\n                event: this.attachEvent(dayIndex),\n            };\n\n            this.calendarDays.push(day);\n        }\n        // set current day\n        const calendarToday = this.calendarDays.find(d => isToday({\n            day: d.value,\n            month: this.monthIndex,\n            year: this.year\n        }));\n\n        calendarToday && (calendarToday.isToday = true);\n    }\n\n    private attachEvent(dayIndex: number): CalendarEvent {\n        const makeStringDate = (d: Date) => `${d.getFullYear()}-${d.getMonth()}-${d.getDay()}`;\n        const strDateCalendar = makeStringDate(new Date(2021, this.monthIndex, dayIndex));\n\n        const event = this.events.find(e => {\n            const strDateEvent = makeStringDate(e.date);\n            return strDateEvent === strDateCalendar;\n        })\n\n        return event;\n    }\n\n}","<div class=\"calendar\">\n  <span class=\"day day-header\" *ngFor=\"let dayName of weekDays\"\n    >{{ dayName }}\n  </span>\n  <span\n    class=\"day\"\n    [ngClass]=\"{\n      'prev-month': day.isPrevMonth,\n      'has-event': !!day.event,\n      today: day.isToday\n    }\"\n    *ngFor=\"let day of calendarDays\"\n    title=\"{{ day.event?.description }}\"\n    >{{ day.value }}\n  </span>\n</div>\n\n<br />\n<h2>Dummy event</h2>\n<pre>\n  {{ events | json }}\n</pre>\n","const currentYear = new Date().getFullYear();\n\ntype DateType = {\n    year?: number;\n    month?: number;\n    day?: number;\n}\n\nexport function getDaysInMonth({ year = currentYear, month }: DateType): number {\n    return new Date(+year, +month + 1, 0).getDate();\n}\n\nexport function getFirstDayOfWeek({ year = currentYear, month }: DateType): number {\n    return new Date(+year, +month, 1).getDay();\n}\n\nexport function isToday({ year = currentYear, month, day }: DateType): boolean {\n    const today = new Date();\n    const dt = new Date(+year, +month, +day);\n\n    return dt.getDate() === today.getDate()\n        && dt.getMonth() === today.getMonth()\n        && dt.getFullYear() === today.getFullYear();\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}